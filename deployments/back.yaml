apiVersion: v1
kind: Service
metadata:
  name: back-service
spec:
  type: ClusterIP
  selector:
    app: talkiewalkie-back
  ports:
    - port: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: talkiewalkie-back
  name: talkiewalkie-back
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: talkiewalkie-back
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: talkiewalkie-back
    spec:
      containers:
      - image: gcr.io/talkiewalkie-305117/talkiewalkie-back:0
        imagePullPolicy: IfNotPresent
        name: talkiewalkie-back
        ports:
          - containerPort: 8080
        env:
          - name: PG_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pg_password
                name: mysecrets
          - name: PG_HOST
            value: "pgsql"
          - name: PG_USER
            value: "postgres"
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: jwt_secret
                name: mysecrets
          - name: BUCKET_NAME
            valueFrom:
              secretKeyRef:
                key: bucket_name
                name: mysecrets
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

