# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: audio_proc.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='audio_proc.proto',
  package='audioproc',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10\x61udio_proc.proto\x12\taudioproc\"M\n\x16\x46ormatAndCompressInput\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\x12\x10\n\x08\x66ileName\x18\x02 \x01(\t\x12\x10\n\x08mimeType\x18\x03 \x01(\t\"*\n\x17\x46ormatAndCompressOutput\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\x32k\n\x0b\x43ompression\x12\\\n\x11\x46ormatAndCompress\x12!.audioproc.FormatAndCompressInput\x1a\".audioproc.FormatAndCompressOutput\"\x00\x62\x06proto3'
)




_FORMATANDCOMPRESSINPUT = _descriptor.Descriptor(
  name='FormatAndCompressInput',
  full_name='audioproc.FormatAndCompressInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='audioproc.FormatAndCompressInput.content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fileName', full_name='audioproc.FormatAndCompressInput.fileName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mimeType', full_name='audioproc.FormatAndCompressInput.mimeType', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=31,
  serialized_end=108,
)


_FORMATANDCOMPRESSOUTPUT = _descriptor.Descriptor(
  name='FormatAndCompressOutput',
  full_name='audioproc.FormatAndCompressOutput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='audioproc.FormatAndCompressOutput.content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=152,
)

DESCRIPTOR.message_types_by_name['FormatAndCompressInput'] = _FORMATANDCOMPRESSINPUT
DESCRIPTOR.message_types_by_name['FormatAndCompressOutput'] = _FORMATANDCOMPRESSOUTPUT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FormatAndCompressInput = _reflection.GeneratedProtocolMessageType('FormatAndCompressInput', (_message.Message,), {
  'DESCRIPTOR' : _FORMATANDCOMPRESSINPUT,
  '__module__' : 'audio_proc_pb2'
  # @@protoc_insertion_point(class_scope:audioproc.FormatAndCompressInput)
  })
_sym_db.RegisterMessage(FormatAndCompressInput)

FormatAndCompressOutput = _reflection.GeneratedProtocolMessageType('FormatAndCompressOutput', (_message.Message,), {
  'DESCRIPTOR' : _FORMATANDCOMPRESSOUTPUT,
  '__module__' : 'audio_proc_pb2'
  # @@protoc_insertion_point(class_scope:audioproc.FormatAndCompressOutput)
  })
_sym_db.RegisterMessage(FormatAndCompressOutput)



_COMPRESSION = _descriptor.ServiceDescriptor(
  name='Compression',
  full_name='audioproc.Compression',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=154,
  serialized_end=261,
  methods=[
  _descriptor.MethodDescriptor(
    name='FormatAndCompress',
    full_name='audioproc.Compression.FormatAndCompress',
    index=0,
    containing_service=None,
    input_type=_FORMATANDCOMPRESSINPUT,
    output_type=_FORMATANDCOMPRESSOUTPUT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMPRESSION)

DESCRIPTOR.services_by_name['Compression'] = _COMPRESSION

# @@protoc_insertion_point(module_scope)
