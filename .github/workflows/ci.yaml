# REF: https://docs.github.com/en/actions/guides/deploying-to-google-kubernetes-engine
name: GKE CI/CD

on:
  push:
    branches:
      - master

env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  TEST_DB_PASSWORD: hello-this-is-test-password
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: europe-west1-b
  GKE_CLUSTER: talkiewalkie-main

jobs:
  setup-build-publish-deploy:
    name: Backend test & deployment
    runs-on: ubuntu-latest

    services:
      test-db:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: hello-this-is-test-password
          POSTGRES_USER: theo
          POSTGRES_PORT: 5432
          POSTGRES_DB: talkiewalkie-test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Test deps
        run: |
          # GO INSTALLL
          curl -LO https://golang.org/dl/go1.16.4.linux-amd64.tar.gz
          sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.16.4.linux-amd64.tar.gz
          export PATH=$PATH:/usr/local/go/bin
          export GO111MODULE=on
          pushd server && go get -d -v ./... && popd

      - name: Build
        run: |
          pushd server && go build ./... && popd

      - name: Test
        run: |
        #          pushd server && go test ./common/... ./cmd/... ./testutils/... ./entities/... ./grpc/... && popd


      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        if: ${{ false }}
        with:
          version: '336.0.0'
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_SA_B64 }}

      # Build the Docker image
      - name: Build
        # Disable since we have Cloud Build - but keeping since we're lacking an automatic deployment mechanism
        if: ${{ false }}
        run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          # gcloud auth configure-docker
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
          pushd server && ./build.sh && popd
          # pushd web && ./build.sh && popd
          # Delay waiting commands for jobs to be created
          sleep 10
          kubectl wait --for=condition=complete --timeout=15m job/back-build-${{ github.sha }} -n prod && kubectl set image deployment/back back=gcr.io/${{ secrets.GKE_PROJECT }}/talkiewalkie-back:${{ github.sha }} -n prod
          # kubectl wait --for=condition=complete --timeout=15m job/web-build-${{ github.sha }} -n prod && kubectl set image deployment/webapp webapp=gcr.io/${{ secrets.GKE_PROJECT }}/talkiewalkie-front:${{ github.sha }} -n prod

